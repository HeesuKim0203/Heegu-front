name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v3
      - 
        name: Set up Docker Buildx
        # 멀티플랫폼 이미지 빌드, 캐시 내보내기 등을 위해 사용.
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to Docker Hub
        # Docker Hub 로그인을 위해 사용
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - 
        name: Build and push production
        # Docker 이미지를 빌드하고 푸시할 수 있는 GitHub action
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ vars.DOCKERFILE_PATH }}
          push: true
          # rollback 용도로 버전이 명시된 태그를 추가로 push한다.
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APP_NAME }}:latest,${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APP_NAME }}:${{ env.VERSION }}
          # GitHub Actions 캐시에 직접 빌드 캐시를 저장한다. (experimental)
          # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 빌드 대상 플랫폼 설정
          platforms: ${{ vars.DOCKER_PLATFORMS }}
      - 
        name: Deploy production
        # ssh를 통해 배포할 서버로 접속하여 배포 스크립트를 실행하기 위해 사용한다.
        uses: appleboy/ssh-action@master
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE_TAG: latest
					DOCKER_APP_NAME: ${{ secrets.DOCKER_APP_NAME }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: DOCKER_REGISTRY,DOCKER_IMAGE_TAG,DOCKER_APP_NAME
          script: |
            cd ${{ vars.DEPLOY_PATH }}
            ./deploy.sh
